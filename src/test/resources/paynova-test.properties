#If you want do the integration tests live (against the API server) - change to true and change endoint, username, password
#Not all tests can be done live since some service calls are depended on others
paynova.do.live.test=false
paynova.api.endpoint=http://endpoint-contact-paynova-support.com
paynova.api.username=username-contact-paynova-support
paynova.api.password=password-contact-paynova-support
#Change - if you change endpoint,username,password (contact Paynova support to get a secretkey)
paynova.api.secretkey=SECRET_KEYSECRET
paynova.api.successurl=http://www.foo.com/back
paynova.api.cancelurl=http://www.foo.com/cancel
paynova.api.pendingurl=http://www.foo.com/pending
paynova.api.callbackurl=http://www.foo.com/callback
dont.change.settings.below=OK?
response.authentication.failed={"status":{ "isSuccess": false,"errorNumber": -3,"statusKey": "HTTP_401","statusMessage": "API authentication failed.","errors": null,"exceptionDetails": null},"orderId": "00000000-0000-0000-0000-000000000000"}
response.createorder.success={"status":{"isSuccess": true,"errorNumber": 0,	"statusKey": "SUCCESS",	"statusMessage": "The operation was successful.",	"errors": null,	"exceptionDetails": null}, "orderId":"MOCK_VALUE_ORDER_ID"}
response.createorder.fail={"status":{"isSuccess":false,"errorNumber":-2,"statusKey":"VALIDATION_ERROR","statusMessage":"The request contained one or more validation errors.  See the errors collection for further details.","errors":[{"errorCode":"Length","fieldName":"OrderNumber","message":"'Order Number' must be between 4 and 50 characters. You entered 3 characters."}]}}
response.initializepayment.success={"status":{"isSuccess": true,"errorNumber": 0,"statusKey": "SUCCESS","statusMessage": "The operation was successful."},"sessionId": "9c25d799-aa99-4e97-a941-a35b00ea0aec","url": "https://08r2paygate.paynova.com/Aero/Payment/2/9c25d799-aa99-4e97-a941-a35b00ea0aec"}
response.initializepayment.fail={"status":{"isSuccess":false,"errorNumber":3000,"statusKey":"ORDER_NOT_FOUND","statusMessage":"The specified order was not found."}}
response.finalizeauthorization.success={"status":{"isSuccess": true,"errorNumber": 0,"statusKey": "SUCCESS","statusMessage":"The operation was successful.","errors": null,"exceptionDetails": null},"totalAmountFinalized": MOCK_VALUE_AMOUNT_FINALIZED,"totalAmountPendingFinalization": 0,"canFinalizeAgain": false,"amountRemainingForFinalization": 0,"transactionId": "MOCK_VALUE_TRANSACTION_ID","batchId": "141000132879","acquirerId": "1010"}
response.finalizeauthorization.fail={"status":{"isSuccess":false,"errorNumber":3007,"statusKey":"PAYMENT_COMPLETED","statusMessage":"The operation cannot be completed because the payment is currently in a completed state."},"canFinalizeAgain":false}
response.annulauthorization.success={"status":{"isSuccess":true,"errorNumber":0,"statusKey":"SUCCESS","statusMessage":"The operation was successful."}}
response.annulauthorization.fail={"status":{"isSuccess":false,"errorNumber":3016,"statusKey":"PAYMENT_ANNULLED","statusMessage":"The operation cannot be completed because the payment is currently in a cancelled state."}}
response.getcustomerprofile.success={"status":{"isSuccess":true,"errorNumber":0,"statusKey":"SUCCESS","statusMessage":"The operation was successful."},"profileId":"nice-profile","profileCards":[{"cardId":"4b22c69f-79c8-4a33-bce6-a35b01338612","expirationYear":17,"expirationMonth":2,"firstSix":"411111","lastFour":"1111"}]}
response.getcustomerprofile.fail={"status":{"isSuccess":false,"errorNumber":2000,"statusKey":"CUST_PROF_NOT_FOUND","statusMessage":"The specified customer profile was not found."}}
response.refundpayment.success={"status":{"isSuccess":true,"errorNumber":0,"statusKey":"SUCCESS","statusMessage":"The operation was successful."},"totalAmountRefunded":"100","canRefundAgain":false,"transactionId":"201407021913436107","batchId":"183030203046","acquirerId":"1010"}
response.refundpayment.fail={"status":{"isSuccess":false,"errorNumber":3015,"statusKey":"REFUND_AMT_EXCEEDED","statusMessage":"The total amount you have specified in your refund call is greater than the available balance to refund (total finalized amount - total refunds).  Existing refunds which are in a pending state also count against the available balance."},"canRefundAgain":false}
response.removecustomerprofilecard.success={"status":{"isSuccess":true,"errorNumber":0,"statusKey":"SUCCESS","statusMessage":"The operation was successful."}}
response.removecustomerprofilecard.fail={"status":{"isSuccess":false,"errorNumber":2001,"statusKey":"CUST_CARD_NOT_FOUND","statusMessage":"The specified profile card was not found in the customer's profile."}}
response.removecustomerprofile.success={"status":{"isSuccess":true,"errorNumber":0,"statusKey":"SUCCESS","statusMessage":"The operation was successful."}}
response.removecustomerprofile.fail={"status":{"isSuccess":false,"errorNumber":2000,"statusKey":"CUST_PROF_NOT_FOUND","statusMessage":"The specified customer profile was not found."}}